import {
  InputConfiguration,
  Inputs, PowerCapacityConfiguration,
  PowerPlantConfiguration,
  PowerPlantType, StackReplacementType,
  UserInputFields
} from "../types";

export const defaultInputData: {
  location: string;
  inputConfiguration: InputConfiguration;
  data: Inputs;
} = {
  location: "WA",
  inputConfiguration: "Basic",
  data: {
    powerPlantConfiguration: "Standalone",
    powerSupplyOption: "Self Build",
    // Technically invalid but needed to make existing tests pass
    powerCapacityConfiguration: "Nominal Capacity",
    powerPlantOversizeRatio: 1,
    solarToWindPercentage: 100,
    additionalUpfrontCosts: 0,
    additionalAnnualCosts: 0,
    batteryEpcCosts: 0,
    batteryEfficiency: 0,
    batteryMinCharge: 0,
    batteryLandProcurementCosts: 0,
    batteryRatedPower: 0,
    batteryCosts: 0,
    batteryOMCost: 0,
    batteryReplacementCost: 0,
    batteryLifetime: 0,
    discountRate: 0,
    batteryStorageDuration: 0,
    electrolyserCostReductionWithScale: 0,
    electrolyserEpcCosts: 0,
    electrolyserLandProcurementCosts: 0,
    electrolyserReferenceFoldIncrease: 0,
    electrolyserOMCost: 0,
    electrolyserStackReplacement: 0,
    gridConnectionCost: 0,
    electrolyserNominalCapacity: 0,
    solarNominalCapacity: 0,
    windNominalCapacity: 0,
    solarReferenceCapacity: 0,
    windReferenceCapacity: 0,
    electrolyserReferenceCapacity: 0,
    electrolyserPurchaseCost: 0,
    solarFarmBuildCost: 0,
    windFarmBuildCost: 0,
    solarEpcCosts: 0,
    solarLandProcurementCosts: 0,
    solarPVCostReductionWithScale: 0,
    solarReferenceFoldIncrease: 0,
    solarOpex: 0,
    stackReplacementType: "Cumulative Hours",
    stackLifetime: 0,
    stackDegradation: 0,
    maximumDegradationBeforeReplacement: 0,
    powerPlantType: "Solar",
    waterSupplyCost: 0,
    windCostReductionWithScale: 0,
    windEpcCosts: 0,
    windLandProcurementCosts: 0,
    windReferenceFoldIncrease: 0,
    windOpex: 0,
    projectTimeline: 0,
    additionalTransmissionCharges: 0,
    principalPPACost: 0,
    solarDegradation: 0,
    windDegradation: 0,
    electrolyserMaximumLoad: 0,
    electrolyserMinimumLoad: 0,
    timeBetweenOverloading: 0,
    maximumLoadWhenOverloading: 0,
    waterRequirementOfElectrolyser: 0,
    inflationRate: 0,
  },
};

export const standaloneSolarWithBatteryScenario: {
  location: string;
  inputConfiguration: InputConfiguration;
  data: UserInputFields;
} = {
  location: "Port Hedland, WA",
  inputConfiguration: "Advanced",
  data: {
    powerPlantConfiguration: "Standalone",
    powerSupplyOption: "Self Build",
    powerPlantType: "Solar",
    powerCapacityConfiguration: "Nominal Capacity",
    powerPlantOversizeRatio: 1,
    solarToWindPercentage: 100,
    electrolyserNominalCapacity: 10,
    solarNominalCapacity: 15,
    windNominalCapacity: 0,
    batteryRatedPower: 2,
    batteryStorageDuration: 4,
    secAtNominalLoad: 53.8,
    electrolyserEfficiency: 100,
    electrolyserMaximumLoad: 100,
    electrolyserMinimumLoad: 10,
    maximumLoadWhenOverloading: 0,
    timeBetweenOverloading: 0,
    stackReplacementType: "Cumulative Hours",
    stackLifetime: 60000,
    stackDegradation: 0,
    maximumDegradationBeforeReplacement: 0,
    waterRequirementOfElectrolyser: 10,
    electrolyserReferenceCapacity: 1000,
    electrolyserPurchaseCost: 1038,
    electrolyserCostReductionWithScale: 0,
    electrolyserReferenceFoldIncrease: 0,
    electrolyserEpcCosts: 1,
    electrolyserLandProcurementCosts: 0,
    electrolyserOMCost: 2.5,
    electrolyserStackReplacement: 40,
    waterSupplyCost: 5,
    solarReferenceCapacity: 1000,
    solarFarmBuildCost: 799,
    solarPVCostReductionWithScale: 0,
    solarReferenceFoldIncrease: 0,
    solarEpcCosts: 0,
    solarLandProcurementCosts: 1,
    solarOpex: 17000,
    windReferenceCapacity: 1000,
    windFarmBuildCost: 1000,
    windCostReductionWithScale: 0,
    windReferenceFoldIncrease: 0,
    windEpcCosts: 0,
    windLandProcurementCosts: 0,
    windOpex: 25000,
    gridConnectionCost: 0,
    additionalTransmissionCharges: 0,
    principalPPACost: 0,
    batteryEfficiency: 90,
    batteryMinCharge: 0,
    batteryLifetime: 10,
    batteryCosts: 848,
    batteryEpcCosts: 0,
    batteryLandProcurementCosts: 5,
    batteryOMCost: 19239,
    batteryReplacementCost: 100,
    additionalUpfrontCosts: 100000,
    additionalAnnualCosts: 10000,
    solarDegradation: 0,
    windDegradation: 0,
    projectTimeline: 20,
    discountRate: 7,
    inflationRate: 2.5,
  },
};

export const standaloneAmmoniaSolarWithBatteryScenario: {
  location: string;
  inputConfiguration: InputConfiguration;
  data: UserInputFields;
} = {
  location: "Port Hedland, WA",
  inputConfiguration: "Advanced",
  data: {
    powerfuel: "ammonia",
    powerPlantConfiguration: "Standalone",
    powerSupplyOption: "Self Build",
    powerPlantType: "Solar",
    powerPlantOversizeRatio: 1,
    solarToWindPercentage: 100,
    batteryRatedPower: 2,
    batteryStorageDuration: 4,
    secAtNominalLoad: 53.8,
    electrolyserEfficiency: 100,
    electrolyserMaximumLoad: 100,
    electrolyserMinimumLoad: 10,
    maximumLoadWhenOverloading: 0,
    timeBetweenOverloading: 0,
    stackReplacementType: "Cumulative Hours",
    stackLifetime: 60000,
    stackDegradation: 0,
    maximumDegradationBeforeReplacement: 0,
    waterRequirementOfElectrolyser: 10,
    electrolyserReferenceCapacity: 1000,
    electrolyserPurchaseCost: 1038,
    electrolyserCostReductionWithScale: 0,
    electrolyserReferenceFoldIncrease: 0,
    electrolyserEpcCosts: 1,
    electrolyserLandProcurementCosts: 0,
    electrolyserOMCost: 2.5,
    electrolyserStackReplacement: 40,
    waterSupplyCost: 5,
    solarReferenceCapacity: 1000,
    solarFarmBuildCost: 799,
    solarPVCostReductionWithScale: 0,
    solarReferenceFoldIncrease: 0,
    solarEpcCosts: 0,
    solarLandProcurementCosts: 1,
    solarOpex: 17000,
    windReferenceCapacity: 1000,
    windFarmBuildCost: 1000,
    windCostReductionWithScale: 0,
    windReferenceFoldIncrease: 0,
    windEpcCosts: 0,
    windLandProcurementCosts: 0,
    windOpex: 25000,
    gridConnectionCost: 0,
    additionalTransmissionCharges: 0,
    principalPPACost: 0,
    batteryEfficiency: 90,
    batteryMinCharge: 0,
    batteryLifetime: 10,
    batteryCosts: 848,
    batteryEpcCosts: 0,
    batteryLandProcurementCosts: 5,
    batteryOMCost: 19239,
    batteryReplacementCost: 100,
    additionalUpfrontCosts: 100000,
    additionalAnnualCosts: 10000,
    solarDegradation: 0,
    windDegradation: 0,
    projectTimeline: 20,
    discountRate: 7,
    inflationRate: 2.5,
    // ammonia
    ammoniaPlantCapacity: 50,
    ammoniaStorageCapacity: 30,
    electrolyserSystemOversizing: 45,
    ammoniaPlantSec: 0.41,
    asuSec: 0.22,
    hydrogenStorageCapacity: 49_000,
    ammoniaPlantMinimumTurndown: 33,
    minimumHydrogenStorage: 10,
    ammoniaSynthesisUnitCost: 520,
    ammoniaStorageCost: 1370,
    airSeparationUnitCost: 251,
    ammoniaEpcCosts: 0,
    ammoniaLandProcurementCosts: 0,
    ammoniaPlantOMCost: 2,
    ammoniaStorageOMCost: 2,
    asuPlantOMCost: 2,
    hydrogenStoragePurchaseCost: 878,
    hydrogenStorageOMCost: 2.5,


    // pick from synthesized inputs
    // Electrolyser
    electrolyserNominalCapacity: 1,
    powerCapacityConfiguration: "Oversize Ratio" as PowerCapacityConfiguration,
    solarNominalCapacity: 0,
    windNominalCapacity: 0,
  },
};

export const standaloneSolarScenario: {
  location: string;
  inputConfiguration: InputConfiguration;
  data: UserInputFields;
} = {
  location: "Fitzroy, QLD",
  inputConfiguration: "Advanced",
  data: {
    powerPlantConfiguration: "Standalone",
    powerSupplyOption: "Self Build",
    powerPlantType: "Solar",
    powerCapacityConfiguration: "Nominal Capacity",
    powerPlantOversizeRatio: 1,
    solarToWindPercentage: 100,
    electrolyserNominalCapacity: 10,
    solarNominalCapacity: 15,
    windNominalCapacity: 0,
    batteryRatedPower: 0,
    batteryStorageDuration: 0,
    secAtNominalLoad: 50,
    electrolyserEfficiency: 100,
    electrolyserMaximumLoad: 100,
    electrolyserMinimumLoad: 10,
    maximumLoadWhenOverloading: 0,
    timeBetweenOverloading: 0,
    stackReplacementType: "Cumulative Hours",
    stackLifetime: 60000,
    stackDegradation: 0,
    maximumDegradationBeforeReplacement: 0,
    waterRequirementOfElectrolyser: 10,
    electrolyserReferenceCapacity: 1000,
    electrolyserPurchaseCost: 1000,
    electrolyserCostReductionWithScale: 0,
    electrolyserReferenceFoldIncrease: 0,
    electrolyserEpcCosts: 0,
    electrolyserLandProcurementCosts: 0,
    electrolyserOMCost: 2.5,
    electrolyserStackReplacement: 40,
    waterSupplyCost: 5,
    solarDegradation: 0,
    windDegradation: 0,
    solarReferenceCapacity: 1000,
    solarFarmBuildCost: 1000,
    solarPVCostReductionWithScale: 0,
    solarReferenceFoldIncrease: 0,
    solarEpcCosts: 0,
    solarLandProcurementCosts: 0,
    solarOpex: 17000,
    windReferenceCapacity: 1000,
    windFarmBuildCost: 1000,
    windCostReductionWithScale: 0,
    windReferenceFoldIncrease: 0,
    windEpcCosts: 0,
    windLandProcurementCosts: 0,
    windOpex: 25000,
    gridConnectionCost: 0,
    additionalTransmissionCharges: 0,
    principalPPACost: 0,
    batteryEfficiency: 90,
    batteryMinCharge: 0,
    batteryLifetime: 0,
    batteryCosts: 0,
    batteryEpcCosts: 0,
    batteryLandProcurementCosts: 0,
    batteryOMCost: 0,
    batteryReplacementCost: 100,
    additionalUpfrontCosts: 0,
    additionalAnnualCosts: 0,
    projectTimeline: 20,
    discountRate: 7,
    inflationRate: 2.5,
  },
};

export const standaloneAmmoniaSolarScenario: {
  location: string;
  inputConfiguration: InputConfiguration;
  data: UserInputFields;
} = {
  location: "Fitzroy, QLD",
  inputConfiguration: "Advanced",
  data: {
    powerfuel: "ammonia",
    powerPlantConfiguration: "Standalone",
    powerSupplyOption: "Self Build",
    powerPlantType: "Solar",
    powerPlantOversizeRatio: 1,
    solarToWindPercentage: 100,
    batteryRatedPower: 0,
    batteryStorageDuration: 0,
    secAtNominalLoad: 50,
    electrolyserEfficiency: 100,
    electrolyserMaximumLoad: 100,
    electrolyserMinimumLoad: 10,
    maximumLoadWhenOverloading: 0,
    timeBetweenOverloading: 0,
    stackReplacementType: "Cumulative Hours",
    stackLifetime: 60000,
    stackDegradation: 0,
    maximumDegradationBeforeReplacement: 0,
    waterRequirementOfElectrolyser: 10,
    electrolyserReferenceCapacity: 1000,
    electrolyserPurchaseCost: 1000,
    electrolyserCostReductionWithScale: 0,
    electrolyserReferenceFoldIncrease: 0,
    electrolyserEpcCosts: 0,
    electrolyserLandProcurementCosts: 0,
    electrolyserOMCost: 2.5,
    electrolyserStackReplacement: 40,
    waterSupplyCost: 5,
    solarDegradation: 0,
    windDegradation: 0,
    solarReferenceCapacity: 1000,
    solarFarmBuildCost: 1000,
    solarPVCostReductionWithScale: 0,
    solarReferenceFoldIncrease: 0,
    solarEpcCosts: 0,
    solarLandProcurementCosts: 0,
    solarOpex: 17000,
    windReferenceCapacity: 1000,
    windFarmBuildCost: 1000,
    windCostReductionWithScale: 0,
    windReferenceFoldIncrease: 0,
    windEpcCosts: 0,
    windLandProcurementCosts: 0,
    windOpex: 25000,
    gridConnectionCost: 0,
    additionalTransmissionCharges: 0,
    principalPPACost: 0,
    batteryEfficiency: 90,
    batteryMinCharge: 0,
    batteryLifetime: 0,
    batteryCosts: 0,
    batteryEpcCosts: 0,
    batteryLandProcurementCosts: 0,
    batteryOMCost: 0,
    batteryReplacementCost: 100,
    additionalUpfrontCosts: 0,
    additionalAnnualCosts: 0,
    projectTimeline: 20,
    discountRate: 7,
    inflationRate: 2.5,
    // ammonia params
    ammoniaPlantCapacity: 50,
    ammoniaStorageCapacity: 30,
    electrolyserSystemOversizing: 45,
    ammoniaPlantSec: 0.41,
    asuSec: 0.22,
    hydrogenStorageCapacity: 49_000,
    ammoniaPlantMinimumTurndown: 33,
    minimumHydrogenStorage: 10,
    ammoniaSynthesisUnitCost: 520,
    ammoniaStorageCost: 1370,
    airSeparationUnitCost: 251,
    ammoniaEpcCosts: 0,
    ammoniaLandProcurementCosts: 0,
    ammoniaPlantOMCost: 2,
    ammoniaStorageOMCost: 2,
    asuPlantOMCost: 2,
    hydrogenStoragePurchaseCost: 878,
    hydrogenStorageOMCost: 2.5,
    // synthesized
    powerCapacityConfiguration: "Oversize Ratio" as PowerCapacityConfiguration,
    solarNominalCapacity: 0,
    windNominalCapacity: 0,
  },
};

export const standaloneWindScenario: {
  location: string;
  inputConfiguration: InputConfiguration;
  data: UserInputFields;
} = {
  location: "Central West NSW",
  inputConfiguration: "Advanced",
  data: {
    powerPlantConfiguration: "Standalone",
    powerSupplyOption: "Self Build",
    powerPlantType: "Wind",
    powerCapacityConfiguration: "Nominal Capacity",
    powerPlantOversizeRatio: 1,
    solarToWindPercentage: 100,
    electrolyserNominalCapacity: 10,
    solarNominalCapacity: 0,
    windNominalCapacity: 12,
    batteryRatedPower: 0,
    batteryStorageDuration: 0,
    secAtNominalLoad: 50,
    electrolyserEfficiency: 100,
    electrolyserMaximumLoad: 100,
    electrolyserMinimumLoad: 10,
    maximumLoadWhenOverloading: 0,
    timeBetweenOverloading: 0,
    stackReplacementType: "Cumulative Hours",
    stackLifetime: 60000,
    stackDegradation: 0,
    maximumDegradationBeforeReplacement: 0,
    waterRequirementOfElectrolyser: 10,
    electrolyserReferenceCapacity: 1000,
    electrolyserPurchaseCost: 1000,
    electrolyserCostReductionWithScale: 0,
    electrolyserReferenceFoldIncrease: 0,
    electrolyserEpcCosts: 0,
    electrolyserLandProcurementCosts: 0,
    electrolyserOMCost: 2.5,
    electrolyserStackReplacement: 40,
    waterSupplyCost: 5,
    solarDegradation: 0,
    windDegradation: 0,
    solarReferenceCapacity: 0,
    solarFarmBuildCost: 0,
    solarPVCostReductionWithScale: 0,
    solarReferenceFoldIncrease: 0,
    solarEpcCosts: 0,
    solarLandProcurementCosts: 0,
    solarOpex: 0,
    windReferenceCapacity: 1000,
    windFarmBuildCost: 1000,
    windCostReductionWithScale: 0,
    windReferenceFoldIncrease: 0,
    windEpcCosts: 0,
    windLandProcurementCosts: 0,
    windOpex: 25000,
    gridConnectionCost: 0,
    additionalTransmissionCharges: 0,
    principalPPACost: 0,
    batteryEfficiency: 90,
    batteryMinCharge: 0,
    batteryLifetime: 0,
    batteryCosts: 0,
    batteryEpcCosts: 0,
    batteryLandProcurementCosts: 0,
    batteryOMCost: 0,
    batteryReplacementCost: 100,
    additionalUpfrontCosts: 0,
    additionalAnnualCosts: 0,
    projectTimeline: 20,
    discountRate: 7,
    inflationRate: 2.5,
  },
};

export const windWithPPAScenario: {
  location: string;
  inputConfiguration: InputConfiguration;
  data: UserInputFields;
} = {
  location: "East Riverina Murray Region",
  inputConfiguration: "Advanced",
  data: {
    powerPlantConfiguration: "Standalone",
    powerSupplyOption: "Power Purchase Agreement (PPA)",
    powerPlantType: "Wind",
    powerCapacityConfiguration: "Nominal Capacity",
    powerPlantOversizeRatio: 1,
    solarToWindPercentage: 100,
    electrolyserNominalCapacity: 10,
    solarNominalCapacity: 0,
    windNominalCapacity: 15,
    batteryRatedPower: 0,
    batteryStorageDuration: 0,
    secAtNominalLoad: 50,
    electrolyserEfficiency: 100,
    electrolyserMaximumLoad: 100,
    electrolyserMinimumLoad: 10,
    maximumLoadWhenOverloading: 0,
    timeBetweenOverloading: 0,
    stackReplacementType: "Cumulative Hours",
    stackLifetime: 60000,
    stackDegradation: 0,
    maximumDegradationBeforeReplacement: 0,
    waterRequirementOfElectrolyser: 10,
    electrolyserReferenceCapacity: 1000,
    electrolyserPurchaseCost: 1000,
    electrolyserCostReductionWithScale: 0,
    electrolyserReferenceFoldIncrease: 0,
    electrolyserEpcCosts: 0,
    electrolyserLandProcurementCosts: 0,
    electrolyserOMCost: 2.5,
    electrolyserStackReplacement: 40,
    waterSupplyCost: 5,
    solarDegradation: 0,
    windDegradation: 0,
    solarReferenceCapacity: 0,
    solarFarmBuildCost: 0,
    solarPVCostReductionWithScale: 0,
    solarReferenceFoldIncrease: 0,
    solarEpcCosts: 0,
    solarLandProcurementCosts: 0,
    solarOpex: 0,
    windReferenceCapacity: 0,
    windFarmBuildCost: 0,
    windCostReductionWithScale: 0,
    windReferenceFoldIncrease: 0,
    windEpcCosts: 0,
    windLandProcurementCosts: 0,
    windOpex: 0,
    gridConnectionCost: 100_000,
    additionalTransmissionCharges: 1,
    principalPPACost: 3,
    batteryEfficiency: 90,
    batteryMinCharge: 0,
    batteryLifetime: 0,
    batteryCosts: 0,
    batteryEpcCosts: 0,
    batteryLandProcurementCosts: 0,
    batteryOMCost: 0,
    batteryReplacementCost: 100,
    additionalUpfrontCosts: 0,
    additionalAnnualCosts: 0,
    projectTimeline: 20,
    discountRate: 7,
    inflationRate: 2.5,
  },
};

export const hybridBatteryGridOversizeRatioScenario: {
  location: string;
  inputConfiguration: InputConfiguration;
  data: UserInputFields;
} = {
  location: "New England",
  inputConfiguration: "Advanced",
  data: {
    powerPlantType: "Hybrid",
    powerPlantOversizeRatio: 1.5,
    solarToWindPercentage: 200 / 3,
    powerPlantConfiguration: "Grid Connected",
    powerSupplyOption: "Self Build",
    powerCapacityConfiguration: "Oversize Ratio",
    electrolyserNominalCapacity: 10,
    batteryRatedPower: 5,
    batteryStorageDuration: 4,
    secAtNominalLoad: 50,
    electrolyserEfficiency: 100,
    electrolyserMaximumLoad: 100,
    electrolyserMinimumLoad: 10,
    maximumLoadWhenOverloading: 0,
    timeBetweenOverloading: 0,
    stackReplacementType: "Cumulative Hours",
    stackLifetime: 60000,
    stackDegradation: 0,
    maximumDegradationBeforeReplacement: 0,
    waterRequirementOfElectrolyser: 10,
    electrolyserReferenceCapacity: 1000,
    electrolyserPurchaseCost: 1000,
    electrolyserCostReductionWithScale: 0,
    electrolyserReferenceFoldIncrease: 0,
    electrolyserEpcCosts: 0,
    electrolyserLandProcurementCosts: 0,
    electrolyserOMCost: 2.5,
    electrolyserStackReplacement: 40,
    waterSupplyCost: 5,
    solarDegradation: 0,
    windDegradation: 0,
    solarReferenceCapacity: 1000,
    solarFarmBuildCost: 1000,
    solarPVCostReductionWithScale: 0,
    solarReferenceFoldIncrease: 0,
    solarEpcCosts: 0,
    solarLandProcurementCosts: 0,
    solarOpex: 17000,
    windReferenceCapacity: 1000,
    windFarmBuildCost: 1000,
    windCostReductionWithScale: 0,
    windReferenceFoldIncrease: 0,
    windEpcCosts: 0,
    windLandProcurementCosts: 0,
    windOpex: 25000,
    gridConnectionCost: 100000,
    additionalTransmissionCharges: 1,
    principalPPACost: 0,
    batteryEfficiency: 90,
    batteryMinCharge: 0,
    batteryLifetime: 10,
    batteryCosts: 446,
    batteryEpcCosts: 0,
    batteryLandProcurementCosts: 0,
    batteryOMCost: 19239,
    batteryReplacementCost: 100,
    additionalUpfrontCosts: 0,
    additionalAnnualCosts: 0,
    projectTimeline: 20,
    discountRate: 7,
    inflationRate: 2.5,
    // pick from synthesized inputs
    solarNominalCapacity: 0,
    windNominalCapacity: 0,
  },
};

export const windWithBatteryAndPPAScenario: {
  location: string;
  inputConfiguration: InputConfiguration;
  data: UserInputFields;
} = {
  location: "South West NSW",
  inputConfiguration: "Advanced",
  data: {
    powerPlantConfiguration: "Standalone",
    powerSupplyOption: "Power Purchase Agreement (PPA)",
    powerPlantType: "Wind",
    powerCapacityConfiguration: "Nominal Capacity",
    powerPlantOversizeRatio: 1,
    solarToWindPercentage: 100,
    electrolyserNominalCapacity: 10,
    solarNominalCapacity: 0,
    windNominalCapacity: 15,
    batteryRatedPower: 2,
    batteryStorageDuration: 4,
    secAtNominalLoad: 50,
    electrolyserEfficiency: 100,
    electrolyserMaximumLoad: 100,
    electrolyserMinimumLoad: 10,
    maximumLoadWhenOverloading: 0,
    timeBetweenOverloading: 0,
    stackReplacementType: "Cumulative Hours",
    stackLifetime: 60000,
    stackDegradation: 0,
    maximumDegradationBeforeReplacement: 0,
    waterRequirementOfElectrolyser: 10,
    electrolyserReferenceCapacity: 1000,
    electrolyserPurchaseCost: 1000,
    electrolyserCostReductionWithScale: 0,
    electrolyserReferenceFoldIncrease: 0,
    electrolyserEpcCosts: 0,
    electrolyserLandProcurementCosts: 0,
    electrolyserOMCost: 2.5,
    electrolyserStackReplacement: 40,
    waterSupplyCost: 5,
    solarDegradation: 0,
    windDegradation: 0,
    solarReferenceCapacity: 0,
    solarFarmBuildCost: 0,
    solarPVCostReductionWithScale: 0,
    solarReferenceFoldIncrease: 0,
    solarEpcCosts: 0,
    solarLandProcurementCosts: 0,
    solarOpex: 0,
    windReferenceCapacity: 0,
    windFarmBuildCost: 0,
    windCostReductionWithScale: 0,
    windReferenceFoldIncrease: 0,
    windEpcCosts: 0,
    windLandProcurementCosts: 0,
    windOpex: 0,
    gridConnectionCost: 0,
    additionalTransmissionCharges: 1,
    principalPPACost: 0,
    batteryEfficiency: 90,
    batteryMinCharge: 0,
    batteryLifetime: 10,
    batteryCosts: 446,
    batteryEpcCosts: 0,
    batteryLandProcurementCosts: 0,
    batteryOMCost: 19239,
    batteryReplacementCost: 100,
    additionalUpfrontCosts: 0,
    additionalAnnualCosts: 0,
    projectTimeline: 20,
    discountRate: 7,
    inflationRate: 2.5,
  },
};

export const basicSolarScenario: {
  location: string;
  inputConfiguration: InputConfiguration;
  data: UserInputFields;
} = {
  location: "Z11",
  inputConfiguration: "Basic",
  data: {
    powerPlantConfiguration: "Standalone",
    powerSupplyOption: "Self Build",
    powerPlantOversizeRatio: 1.5,
    solarToWindPercentage: 100,
    electrolyserPurchaseCost: 1000,
    projectScale: 0.1,
    electrolyserEfficiency: 100,
    waterSupplyCost: 5,
    solarFarmBuildCost: 1000,
    windFarmBuildCost: 2000,
    projectTimeline: 20,
    discountRate: 7,
    // synthesized inputs
    // Electrolyser
    electrolyserNominalCapacity: 1,

    electrolyserReferenceCapacity: 1000,
    electrolyserCostReductionWithScale: 10,
    electrolyserReferenceFoldIncrease: 10,
    electrolyserEpcCosts: 30,
    electrolyserLandProcurementCosts: 6,

    electrolyserOMCost: 2.5,
    electrolyserStackReplacement: 40,
    electrolyserMaximumLoad: 100,
    electrolyserMinimumLoad: 10,
    timeBetweenOverloading: 0,
    maximumLoadWhenOverloading: 0,
    waterRequirementOfElectrolyser: 15,
    secAtNominalLoad: 33.33,

    // Battery
    batteryEpcCosts: 0,
    batteryEfficiency: 0,
    batteryMinCharge: 0,
    batteryLandProcurementCosts: 0,
    batteryRatedPower: 0,
    batteryCosts: 0,
    batteryOMCost: 0,
    batteryReplacementCost: 0,
    batteryLifetime: 0,
    batteryStorageDuration: 0,
    //
    // Power Plant

    powerPlantType: "Wind" as PowerPlantType,

    powerCapacityConfiguration: "Oversize Ratio" as PowerCapacityConfiguration,

    solarNominalCapacity: 0,
    windNominalCapacity: 0,
    solarReferenceCapacity: 1000,
    windReferenceCapacity: 1000,

    solarEpcCosts: 30,
    solarLandProcurementCosts: 6,
    solarPVCostReductionWithScale: 10,
    solarReferenceFoldIncrease: 10,
    solarOpex: 17_000,
    windCostReductionWithScale: 10,
    windEpcCosts: 30,
    windLandProcurementCosts: 6,
    windReferenceFoldIncrease: 10,
    windOpex: 25_000,
    solarDegradation: 0,
    windDegradation: 0,

    // Stack
    stackReplacementType: "Cumulative Hours" as StackReplacementType,
    stackLifetime: 80_000,
    stackDegradation: 0,
    maximumDegradationBeforeReplacement: 0,

    // Grid connection and PPA
    additionalTransmissionCharges: 0,
    principalPPACost: 0,
    gridConnectionCost: 0,


    // Additional costs
    additionalUpfrontCosts: 0,
    additionalAnnualCosts: 0,

    // Cost analysis
    inflationRate: 2.5,
  },
};

export const standaloneSolarWithStackDegradationScenario: {
  location: string;
  inputConfiguration: InputConfiguration;
  data: UserInputFields;
} = {
  location: "Tumut, NSW",
  inputConfiguration: "Advanced",
  data: {
    powerPlantConfiguration: "Standalone",
    powerSupplyOption: "Self Build",
    powerPlantType: "Solar",
    powerCapacityConfiguration: "Nominal Capacity",
    powerPlantOversizeRatio: 1,
    solarToWindPercentage: 100,
    electrolyserNominalCapacity: 10,
    solarNominalCapacity: 10,
    windNominalCapacity: 0,
    batteryRatedPower: 0,
    batteryStorageDuration: 0,
    secAtNominalLoad: 50,
    electrolyserEfficiency: 100,
    electrolyserMaximumLoad: 100,
    electrolyserMinimumLoad: 10,
    maximumLoadWhenOverloading: 0,
    timeBetweenOverloading: 0,
    stackReplacementType: "Cumulative Hours",
    stackLifetime: 60000,
    stackDegradation: 1,
    maximumDegradationBeforeReplacement: 0,
    waterRequirementOfElectrolyser: 10,
    electrolyserReferenceCapacity: 1000,
    electrolyserPurchaseCost: 1000,
    electrolyserCostReductionWithScale: 0,
    electrolyserReferenceFoldIncrease: 0,
    electrolyserEpcCosts: 0,
    electrolyserLandProcurementCosts: 0,
    electrolyserOMCost: 2.5,
    electrolyserStackReplacement: 40,
    waterSupplyCost: 5,
    solarDegradation: 0,
    windDegradation: 0,
    solarReferenceCapacity: 1000,
    solarFarmBuildCost: 1000,
    solarPVCostReductionWithScale: 0,
    solarReferenceFoldIncrease: 0,
    solarEpcCosts: 0,
    solarLandProcurementCosts: 0,
    solarOpex: 17000,
    windReferenceCapacity: 0,
    windFarmBuildCost: 0,
    windCostReductionWithScale: 0,
    windReferenceFoldIncrease: 0,
    windEpcCosts: 0,
    windLandProcurementCosts: 0,
    windOpex: 0,
    gridConnectionCost: 0,
    additionalTransmissionCharges: 0,
    principalPPACost: 0,
    batteryEfficiency: 90,
    batteryMinCharge: 0,
    batteryLifetime: 0,
    batteryCosts: 0,
    batteryEpcCosts: 0,
    batteryLandProcurementCosts: 0,
    batteryOMCost: 0,
    batteryReplacementCost: 0,
    additionalUpfrontCosts: 0,
    additionalAnnualCosts: 0,
    projectTimeline: 20,
    discountRate: 7,
    inflationRate: 2.5,
  },
};

export const standaloneHybridWithDegradationScenario: {
  location: string;
  inputConfiguration: InputConfiguration;
  data: UserInputFields;
} = {
  location: "South East NSW",
  inputConfiguration: "Advanced",
  data: {
    powerPlantConfiguration: "Standalone",
    powerSupplyOption: "Self Build",
    powerPlantType: "Hybrid",
    powerCapacityConfiguration: "Nominal Capacity",
    powerPlantOversizeRatio: 1,
    solarToWindPercentage: 100,
    electrolyserNominalCapacity: 10,
    solarNominalCapacity: 15,
    windNominalCapacity: 12,
    batteryRatedPower: 0,
    batteryStorageDuration: 0,
    secAtNominalLoad: 50,
    electrolyserEfficiency: 100,
    electrolyserMaximumLoad: 100,
    electrolyserMinimumLoad: 10,
    maximumLoadWhenOverloading: 0,
    timeBetweenOverloading: 0,
    stackReplacementType: "Cumulative Hours",
    stackLifetime: 60000,
    stackDegradation: 1,
    maximumDegradationBeforeReplacement: 0,
    waterRequirementOfElectrolyser: 10,
    electrolyserReferenceCapacity: 1000,
    electrolyserPurchaseCost: 1000,
    electrolyserCostReductionWithScale: 0,
    electrolyserReferenceFoldIncrease: 0,
    electrolyserEpcCosts: 0,
    electrolyserLandProcurementCosts: 0,
    electrolyserOMCost: 2.5,
    electrolyserStackReplacement: 40,
    waterSupplyCost: 5,
    solarDegradation: 1,
    windDegradation: 2,
    solarReferenceCapacity: 1000,
    solarFarmBuildCost: 1000,
    solarPVCostReductionWithScale: 0,
    solarReferenceFoldIncrease: 0,
    solarEpcCosts: 0,
    solarLandProcurementCosts: 0,
    solarOpex: 17000,
    windReferenceCapacity: 1000,
    windFarmBuildCost: 1000,
    windCostReductionWithScale: 0,
    windReferenceFoldIncrease: 0,
    windEpcCosts: 0,
    windLandProcurementCosts: 0,
    windOpex: 25000,
    gridConnectionCost: 0,
    additionalTransmissionCharges: 0,
    principalPPACost: 0,
    batteryEfficiency: 0,
    batteryMinCharge: 0,
    batteryLifetime: 0,
    batteryCosts: 0,
    batteryEpcCosts: 0,
    batteryLandProcurementCosts: 0,
    batteryOMCost: 0,
    batteryReplacementCost: 0,
    additionalUpfrontCosts: 0,
    additionalAnnualCosts: 0,
    projectTimeline: 20,
    discountRate: 7,
    inflationRate: 2.5,
  },
};

export const standaloneWindWithBatteryAndDegradationScenario: {
  location: string;
  inputConfiguration: InputConfiguration;
  data: UserInputFields;
} = {
  location: "Southern NSW Tablelands",
  inputConfiguration: "Advanced",
  data: {
    powerPlantConfiguration: "Standalone",
    powerSupplyOption: "Self Build",
    powerPlantType: "Wind",
    powerCapacityConfiguration: "Nominal Capacity",
    electrolyserNominalCapacity: 10,
    solarNominalCapacity: 0,
    windNominalCapacity: 15,
    batteryRatedPower: 2,
    batteryStorageDuration: 2,
    secAtNominalLoad: 50,
    electrolyserEfficiency: 100,
    electrolyserMaximumLoad: 100,
    electrolyserMinimumLoad: 10,
    maximumLoadWhenOverloading: 0,
    timeBetweenOverloading: 0,
    stackReplacementType: "Maximum Degradation Level",
    stackLifetime: 0,
    stackDegradation: 1,
    maximumDegradationBeforeReplacement: 10,
    waterRequirementOfElectrolyser: 10,
    electrolyserReferenceCapacity: 1000,
    electrolyserPurchaseCost: 1000,
    electrolyserCostReductionWithScale: 0,
    electrolyserReferenceFoldIncrease: 0,
    electrolyserEpcCosts: 0,
    electrolyserLandProcurementCosts: 0,
    electrolyserOMCost: 2.5,
    electrolyserStackReplacement: 40,
    waterSupplyCost: 5,
    solarDegradation: 0,
    windDegradation: 1,
    solarReferenceCapacity: 1000,
    solarFarmBuildCost: 1000,
    solarPVCostReductionWithScale: 0,
    solarReferenceFoldIncrease: 0,
    solarEpcCosts: 0,
    solarLandProcurementCosts: 0,
    solarOpex: 17000,
    windReferenceCapacity: 1000,
    windFarmBuildCost: 1000,
    windCostReductionWithScale: 0,
    windReferenceFoldIncrease: 0,
    windEpcCosts: 0,
    windLandProcurementCosts: 0,
    windOpex: 25000,
    gridConnectionCost: 0,
    additionalTransmissionCharges: 0,
    principalPPACost: 0,
    batteryEfficiency: 90,
    batteryMinCharge: 0,
    batteryLifetime: 10,
    batteryCosts: 542,
    batteryEpcCosts: 0,
    batteryLandProcurementCosts: 0,
    batteryOMCost: 9717,
    batteryReplacementCost: 100,
    additionalUpfrontCosts: 0,
    additionalAnnualCosts: 0,
    projectTimeline: 25,
    discountRate: 7,
    inflationRate: 2.5,
    // synthesised
    powerPlantOversizeRatio: 1,
    solarToWindPercentage: 0,
  },
};

export const basicHybridPPAScenario: {
  location: string;
  inputConfiguration: InputConfiguration;
  data: UserInputFields;
} = {
  location: "Z1",
  inputConfiguration: "Basic",
  data: {
    powerSupplyOption: "Power Purchase Agreement (PPA)",
    powerPlantOversizeRatio: 2,
    solarToWindPercentage: 50,
    electrolyserPurchaseCost: 1000,
    projectScale: 100,
    electrolyserEfficiency: 50,
    waterSupplyCost: 5,
    principalPPACost: 10,
    projectTimeline: 20,
    discountRate: 7,
    // synthesized inputs
    // Electrolyser
    electrolyserNominalCapacity: 1,

    electrolyserReferenceCapacity: 1000,
    electrolyserCostReductionWithScale: 10,
    electrolyserReferenceFoldIncrease: 10,
    electrolyserEpcCosts: 30,
    electrolyserLandProcurementCosts: 6,

    electrolyserOMCost: 2.5,
    electrolyserStackReplacement: 40,
    electrolyserMaximumLoad: 100,
    electrolyserMinimumLoad: 10,
    timeBetweenOverloading: 0,
    maximumLoadWhenOverloading: 0,
    waterRequirementOfElectrolyser: 15,
    secAtNominalLoad: 33.33,

    // Battery
    batteryEpcCosts: 0,
    batteryEfficiency: 0,
    batteryMinCharge: 0,
    batteryLandProcurementCosts: 0,
    batteryRatedPower: 0,
    batteryCosts: 0,
    batteryOMCost: 0,
    batteryReplacementCost: 0,
    batteryLifetime: 0,
    batteryStorageDuration: 0,
    //
    // Power Plant
    powerPlantConfiguration: "Standalone" as PowerPlantConfiguration,
    powerPlantType: "Wind" as PowerPlantType,

    powerCapacityConfiguration: "Oversize Ratio" as PowerCapacityConfiguration,

    solarNominalCapacity: 0,
    windNominalCapacity: 0,
    solarReferenceCapacity: 1000,
    windReferenceCapacity: 1000,
    solarFarmBuildCost: 1200,
    windFarmBuildCost: 2000,
    solarEpcCosts: 30,
    solarLandProcurementCosts: 6,
    solarPVCostReductionWithScale: 10,
    solarReferenceFoldIncrease: 10,
    solarOpex: 17_000,
    windCostReductionWithScale: 10,
    windEpcCosts: 30,
    windLandProcurementCosts: 6,
    windReferenceFoldIncrease: 10,
    windOpex: 25_000,
    solarDegradation: 0,
    windDegradation: 0,

    // Stack
    stackReplacementType: "Cumulative Hours" as StackReplacementType,
    stackLifetime: 80_000,
    stackDegradation: 0,
    maximumDegradationBeforeReplacement: 0,

    // Grid connection and PPA
    additionalTransmissionCharges: 0,

    gridConnectionCost: 0,


    // Additional costs
    additionalUpfrontCosts: 0,
    additionalAnnualCosts: 0,

    // Cost analysis

    inflationRate: 2.5,
  },
};

export const standaloneAdvancedAmmoniaSolarScenario: {
  location: string;
  inputConfiguration: InputConfiguration;
  data: UserInputFields;
} = {
  location: "Z12",
  inputConfiguration: "Advanced",
  data: {
    powerfuel: "ammonia",
    ammoniaPlantCapacity: 50,
    ammoniaStorageCapacity: 30,
    ammoniaPlantMinimumTurndown: 33,
    ammoniaPlantSec: 0.41,
    asuSec: 0.22,
    ammoniaSynthesisUnitCost: 520,
    ammoniaStorageCost: 1370,
    airSeparationUnitCost: 251,
    ammoniaEpcCosts: 0,
    ammoniaLandProcurementCosts: 0,
    ammoniaPlantOMCost: 2,
    ammoniaStorageOMCost: 2,
    asuPlantOMCost: 2,
    electrolyserSystemOversizing: 45,
    secAtNominalLoad: 33.3,
    waterRequirementOfElectrolyser: 10,
    electrolyserMaximumLoad: 100,
    electrolyserMinimumLoad: 0,
    maximumLoadWhenOverloading: 100,
    timeBetweenOverloading: 0,
    stackLifetime: 60000,
    stackDegradation: 0,
    hydrogenStorageCapacity: 49000,
    minimumHydrogenStorage: 10,
    electrolyserReferenceCapacity: 1000,
    electrolyserPurchaseCost: 2456,
    electrolyserCostReductionWithScale: 0,
    electrolyserReferenceFoldIncrease: 0,
    hydrogenStoragePurchaseCost: 878,
    electrolyserEpcCosts: 0,
    electrolyserLandProcurementCosts: 0,
    electrolyserOMCost: 2.5,
    hydrogenStorageOMCost: 2,
    electrolyserStackReplacement: 40,
    waterSupplyCost: 5,
    powerPlantOversizeRatio: 2,
    solarDegradation: 0,
    solarFarmBuildCost: 1441,
    solarReferenceCapacity: 1000,
    solarPVCostReductionWithScale: 0,
    solarReferenceFoldIncrease: 0,
    solarEpcCosts: 0,
    solarLandProcurementCosts: 0,
    solarOpex: 17000,
    additionalUpfrontCosts: 0,
    additionalAnnualCosts: 0,
    projectTimeline: 20,
    discountRate: 7,
    stackReplacementType: "Cumulative Hours",
    powerPlantType: "Solar",
    powerPlantConfiguration: "Standalone",
    powerSupplyOption: "Self Build",
    solarToWindPercentage: 100,
    // pick from synthesized inputs
    // synthesized inputs
    // Electrolyser
    electrolyserNominalCapacity: 1,
    electrolyserEfficiency: 100,

    // Battery
    batteryEpcCosts: 0,
    batteryEfficiency: 0,
    batteryMinCharge: 0,
    batteryLandProcurementCosts: 0,
    batteryRatedPower: 0,
    batteryCosts: 0,
    batteryOMCost: 0,
    batteryReplacementCost: 0,
    batteryLifetime: 0,
    batteryStorageDuration: 0,
    //
    // Power Plant
    powerCapacityConfiguration: "Oversize Ratio" as PowerCapacityConfiguration,
    solarNominalCapacity: 0,
    windNominalCapacity: 0,

    windReferenceCapacity: 1000,

    windFarmBuildCost: 2000,
    windCostReductionWithScale: 10,
    windEpcCosts: 30,
    windLandProcurementCosts: 6,
    windReferenceFoldIncrease: 10,
    windOpex: 25_000,
    windDegradation: 0,

    // Stack

    maximumDegradationBeforeReplacement: 0,

    // Grid connection and PPA
    additionalTransmissionCharges: 0,
    principalPPACost: 0,
    gridConnectionCost: 0,

    inflationRate: 2.5,
  },
};

export const standaloneAmmoniaHybridWithBatteryAndDegradationScenario: {
  location: string;
  inputConfiguration: InputConfiguration;
  data: UserInputFields;
} = {
  location: "Z14",
  inputConfiguration: "Advanced",
  data: {
    powerfuel: "ammonia",
    ammoniaPlantCapacity: 100,
    ammoniaStorageCapacity: 30,
    ammoniaPlantMinimumTurndown: 50,
    ammoniaPlantSec: 0.6,
    asuSec: 0.22,
    ammoniaSynthesisUnitCost: 400,
    ammoniaStorageCost: 2500,
    airSeparationUnitCost: 300,
    ammoniaEpcCosts: 0,
    ammoniaLandProcurementCosts: 0,
    ammoniaPlantOMCost: 2,
    ammoniaStorageOMCost: 2,
    asuPlantOMCost: 2,
    electrolyserSystemOversizing: 45,
    secAtNominalLoad: 50,
    waterRequirementOfElectrolyser: 15,
    electrolyserMaximumLoad: 100,
    electrolyserMinimumLoad: 10,
    maximumLoadWhenOverloading: 100,
    timeBetweenOverloading: 0,
    stackLifetime: 80000,
    stackDegradation: 1,
    hydrogenStorageCapacity: 50000,
    minimumHydrogenStorage: 10,
    electrolyserReferenceCapacity: 1000,
    electrolyserPurchaseCost: 1000,
    electrolyserCostReductionWithScale: 10,
    electrolyserReferenceFoldIncrease: 10,
    hydrogenStoragePurchaseCost: 1000,
    electrolyserEpcCosts: 30,
    electrolyserLandProcurementCosts: 6,
    electrolyserOMCost: 2.5,
    hydrogenStorageOMCost: 2,
    electrolyserStackReplacement: 40,
    waterSupplyCost: 5,
    powerPlantOversizeRatio: 2,
    solarToWindPercentage: 50,
    solarDegradation: 0,
    windDegradation: 0,
    solarFarmBuildCost: 1200,
    solarReferenceCapacity: 1000,
    solarPVCostReductionWithScale: 10,
    solarReferenceFoldIncrease: 10,
    windFarmBuildCost: 2000,
    windReferenceCapacity: 1000,
    windCostReductionWithScale: 10,
    windReferenceFoldIncrease: 10,
    solarEpcCosts: 30,
    solarLandProcurementCosts: 6,
    windEpcCosts: 20,
    windLandProcurementCosts: 4,
    solarOpex: 17000,
    windOpex: 25000,
    batteryRatedPower: 4,
    batteryStorageDuration: 2,
    batteryEfficiency: 90,
    batteryMinCharge: 0,
    batteryLifetime: 10,
    batteryCosts: 542,
    batteryEpcCosts: 0,
    batteryLandProcurementCosts: 0,
    batteryOMCost: 9717,
    batteryReplacementCost: 100,
    additionalUpfrontCosts: 0,
    additionalAnnualCosts: 0,
    projectTimeline: 20,
    discountRate: 7,
    stackReplacementType: "Cumulative Hours",
    powerPlantType: "Hybrid",
    powerPlantConfiguration: "Standalone",
    powerSupplyOption: "Self Build",

    // pick from synthesized inputs
    // Electrolyser
    electrolyserNominalCapacity: 1,
    electrolyserEfficiency: 100,
    solarNominalCapacity: 0,
    windNominalCapacity: 0,
    maximumDegradationBeforeReplacement: 0,
    // Grid connection and PPA
    additionalTransmissionCharges: 0,
    principalPPACost: 0,
    gridConnectionCost: 0,
    inflationRate: 2.5,
  },
};

export const standaloneMethanolHybridWithBatteryScenario: {
  location: string;
  inputConfiguration: InputConfiguration;
  data: UserInputFields;
} = {
  location: "Z4",
  inputConfiguration: "Advanced",
  data: {
    powerfuel: "methanol",
    methanolPlantCapacity: 365,
    methanolStorageCapacity: 30,
    methanolPlantMinimumTurndown: 100,
    methanolPlantSec: 0.36,
    ccSec: 0.86,
    methanolPlantUnitCost: 250,
    methanolStorageCost: 227,
    ccPlantCost: 420,
    methanolEpcCosts: 30,
    methanolLandProcurementCosts: 6,
    ccEpcCosts: 20,
    ccLandProcurementCosts: 5,
    methanolPlantOMCost: 5,
    methanolStorageOMCost: 5,
    ccPlantOMCost: 5,
    electrolyserSystemOversizing: 23,
    secAtNominalLoad: 60,
    waterRequirementOfElectrolyser: 10,
    electrolyserMaximumLoad: 100,
    electrolyserMinimumLoad: 0,
    maximumLoadWhenOverloading: 100,
    timeBetweenOverloading: 0,
    stackLifetime: 60000,
    stackDegradation: 0,
    hydrogenStorageCapacity: 50000,
    minimumHydrogenStorage: 10,
    electrolyserReferenceCapacity: 1000,
    electrolyserPurchaseCost: 2456,
    electrolyserCostReductionWithScale: 0,
    electrolyserReferenceFoldIncrease: 0,
    hydrogenStoragePurchaseCost: 878,
    electrolyserEpcCosts: 30,
    electrolyserLandProcurementCosts: 6,
    electrolyserOMCost: 2.5,
    hydrogenStorageOMCost: 2.5,
    electrolyserStackReplacement: 40,
    waterSupplyCost: 5,
    powerPlantOversizeRatio: 1.75,
    solarToWindPercentage: 40,
    windDegradation: 0,
    solarDegradation: 0,
    solarFarmBuildCost: 1441,
    solarReferenceCapacity: 1000,
    solarPVCostReductionWithScale: 0,
    solarReferenceFoldIncrease: 0,
    windFarmBuildCost: 1805,
    windReferenceCapacity: 1000,
    windCostReductionWithScale: 10,
    windReferenceFoldIncrease: 10,
    solarEpcCosts: 0,
    solarLandProcurementCosts: 0,
    windEpcCosts: 30,
    windLandProcurementCosts: 6,
    solarOpex: 17000,
    windOpex: 25000,
    batteryStorageDuration: 8,
    batteryRatedPower: 2,
    batteryEfficiency: 85,
    batteryMinCharge: 5,
    batteryLifetime: 10,
    batteryCosts: 421,
    batteryEpcCosts: 0,
    batteryLandProcurementCosts: 0,
    batteryOMCost: 10000,
    batteryReplacementCost: 100,
    additionalUpfrontCosts: 0,
    additionalAnnualCosts: 0,
    projectTimeline: 25,
    discountRate: 7,
    stackReplacementType: "Cumulative Hours",
    ccSourceConfiguration: "Self Configured",
    powerPlantType: "Hybrid",
    powerPlantConfiguration: "Standalone",
    powerSupplyOption: "Self Build",
    // pick from synthesized inputs
    // Electrolyser
    electrolyserNominalCapacity: 1,
    electrolyserEfficiency: 100,

    powerCapacityConfiguration: "Oversize Ratio" as PowerCapacityConfiguration,

    solarNominalCapacity: 0,
    windNominalCapacity: 0,
    maximumDegradationBeforeReplacement: 0,

    // Grid connection and PPA
    additionalTransmissionCharges: 0,
    principalPPACost: 0,
    gridConnectionCost: 0,
    inflationRate: 2.5,
  },
};

export const gridConnectedMethaneWindWithBatteryAndDegradationScenario: {
  location: string;
  inputConfiguration: InputConfiguration;
  data: UserInputFields;
} = {
  location: "Z18",
  inputConfiguration: "Advanced",
  data: {
    methanePlantCapacity: 400,
    methaneStorageCapacity: 30,
    methanePlantMinimumTurndown: 90,
    methanePlantSec: 0.51,
    ccSec: 0.9,
    methanePlantUnitCost: 400,
    methaneStorageCost: 225,
    ccPlantCost: 1610,
    methaneEpcCosts: 20,
    methaneLandProcurementCosts: 5,
    ccEpcCosts: 10,
    ccLandProcurementCosts: 4,
    methanePlantOMCost: 5,
    methaneStorageOMCost: 5,
    ccPlantOMCost: 5,
    electrolyserSystemOversizing: 23,
    secAtNominalLoad: 50,
    waterRequirementOfElectrolyser: 25,
    electrolyserMaximumLoad: 100,
    electrolyserMinimumLoad: 0,
    maximumLoadWhenOverloading: 100,
    timeBetweenOverloading: 0,
    stackLifetime: 80000,
    stackDegradation: 1,
    maximumDegradationBeforeReplacement: 10,
    hydrogenStorageCapacity: 100000,
    minimumHydrogenStorage: 10,
    electrolyserReferenceCapacity: 1000,
    electrolyserPurchaseCost: 1500,
    electrolyserCostReductionWithScale: 10,
    electrolyserReferenceFoldIncrease: 10,
    hydrogenStoragePurchaseCost: 500,
    electrolyserEpcCosts: 30,
    electrolyserLandProcurementCosts: 6,
    electrolyserOMCost: 2.5,
    hydrogenStorageOMCost: 1,
    electrolyserStackReplacement: 40,
    waterSupplyCost: 2.5,
    powerPlantOversizeRatio: 1.5,
    windDegradation: 1,
    solarDegradation: 0,
    solarToWindPercentage: 0,
    gridConnectionCost: 1000000,
    additionalTransmissionCharges: 10,
    solarFarmBuildCost: 1200,
    solarReferenceCapacity: 1000,
    solarPVCostReductionWithScale: 10,
    solarReferenceFoldIncrease: 10,
    windFarmBuildCost: 2000,
    windReferenceCapacity: 1500,
    windCostReductionWithScale: 20,
    windReferenceFoldIncrease: 20,
    solarEpcCosts: 30,
    solarLandProcurementCosts: 6,
    windEpcCosts: 5,
    windLandProcurementCosts: 5,
    solarOpex: 17000,
    windOpex: 25000,
    principalPPACost: 65,
    batteryStorageDuration: 4,
    batteryEfficiency: 90,
    batteryMinCharge: 10,
    batteryLifetime: 15,
    batteryCosts: 380,
    batteryEpcCosts: 5,
    batteryLandProcurementCosts: 5,
    batteryOMCost: 5000,
    batteryReplacementCost: 90,
    additionalUpfrontCosts: 0,
    additionalAnnualCosts: 1000,
    projectTimeline: 30,
    discountRate: 8,
    stackReplacementType: "Maximum Degradation Level",
    powerPlantType: "Wind",
    powerPlantConfiguration: "Grid Connected",
    powerSupplyOption: "Self Build",
    ccSourceConfiguration: "Self Configured",
    powerfuel: "methane",
    // pick from synthesized inputs
    // Electrolyser
    electrolyserNominalCapacity: 1,
    electrolyserEfficiency: 100,
    batteryRatedPower: 0,
    powerCapacityConfiguration: "Oversize Ratio" as PowerCapacityConfiguration,
    solarNominalCapacity: 0,
    windNominalCapacity: 0,
    inflationRate: 2.5,
  },
};
